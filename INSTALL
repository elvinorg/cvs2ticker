INSTALL INSTRUCTIONS
====================

NOTE: cvs2ticker has been tested on Unix-like systems only.

The basic steps are:

1. Customize cvs2ticker.py and cvs2web.py
2. Install cvs2ticker.py and cvs2web.py on your web server
3. Configure CVSWeb or ViewVC appropriately
4. Hook cvs2ticker.py into CVS


1. Customize cvs2ticker.py and cvs2web.py
-----------------------------------------
First, check that the first line of each Python file contains the path to your
Python interpreter.

Second, near the top of cvs2ticker.py and cvs2web.py there are a few more
configuration variables.

    cvs2ticker.py:
	DEFAULT_GROUP	- The Tickertape group to send to if there is none
			  specified on the command line with the `-g' flag.
	TIMEOUT		- The timeout (in minutes) to send in the notification.
			  Tickertape clients expire the message after this
			  period has elapsed.
	CVS2WEB_URL	- The URL of cvs2web.py. Unlike the URLs in cvs2web.py,
			  below, this URL has no implicit context and must be
			  specified completely.
	
    cvs2web.py:
	CGI_URL		- The URL to the CGI directory containing
			  cvs2ticker.py, cvs2web.py and cvsweb.cgi or
			  viewvc.py. This variable is used only in the
			  following configuration variables, so if you have a
			  more complicated setup, ignore it and set the other
			  variables directly.
			  N.B. these URLs are used in links from pages
			  generated by cvs2web.py, so the protocol and hostname
			  need not be specified explicitly.
	CVS2WEB_URL	- As above, the URL of cvs2web.py. Required.
	CVSWEB_URL	- The URL of cvsweb.cgi or viewvc.py. If you do not
			  use CVSWeb or ViewVC, set this to the empty string
			  ("").
	BUGZILLA_URL	- A format string, with one string argument for the 
			  bug number. Set to the empty string if you do not 
			  use Bugzilla.
	TICKER_URL	- The URL of ticker.py. If you do not use CGITicker,
			  set this to the empty string ("").
	MAIL_DOMAIN	- A domain name to append to user names for use in
			  `mailto' links. Set to the empty string if you don't
			  want `mailto' links.

2. Install cvs2ticker.py on your filesystem(s)
----------------------------------------------
tar zxvf cvs2ticker-1.x.y.tar.gz
cd cvs2ticker-1.x.y
python setup.py install

3. Install cvs2web.py on your web server
----------------------------------------
How to do this depends on your web server. This typically involves putting the
script in a CGI directory, and making sure your web server knows to run it as a
CGI. cvs2web.py currently requires the CVS repository to be readable directly
(not via a pserver), as do CVSWeb and ViewVC.

4. Configure CVSWeb or ViewVC appropriately
---------------------------------
Optional. Refer to the CVSWeb web page at

    http://www.freebsd.org/projects/cvsweb.html

for information on how to install and set up CVSWeb, or the ViewVC web page at

    http://www.viewvc.org/

for information on how to install and set up ViewVC.

Make sure you know the name used to refer to the repository in cvsweb.conf (the
key in the CVSrepositories variable) or viewvc.conf (the key in the cvs_roots
variable); you will need it later.

5. Hook cvs2ticker into CVS
---------------------------
You will need to edit the file ${CVSROOT}/CVSROOT/loginfo. Because CVS
configuration files are themselves CVS controlled files, you will need to check
it out i.e. ``cvs co CVSROOT/loginfo''. Add the following line to the bottom of
the file (it must be all on one line):

ALL /usr/local/bin/cvs2ticker.py -e elvin://elvin -g foo-cvs -n foo /usr/local/cvs

The keyword `ALL' means to run this script when any module in the repository is
written to. Consult the CVS documentation (there is some in the loginfo file
itself) for information about how to tailor this to specific modules.

At least some of the following parameters will need tailoring for your needs:
* `ALL' means to run this script when any module in the repository is
  written to. Consult the CVS documentation (there is some in the loginfo file
  itself) for information about how to tailor this to specific modules.
* /usr/local/bin/cvs2ticker.py is the script to run. If you have installed it
  elsewhere, be sure to adjust this path accordingly.
* elvin://elvin is the URL of your elvin server.
* foo-cvs is the name of the Tickertape channel to which to send notifications.
* foo is the name of the CVS module as recorded in cvsweb.conf or viewvc.conf
  (see step 4, above).
* /usr/local/cvs is your CVS root.

See the man page provided for more details on usage.

Once you have made the necessary changes to the loginfo file, commit it back
into the CVS repository (`cvs commit loginfo').

Congratulations, all future CVS writes will be notified via Elvin and
Tickertape!


@(#) $Id: INSTALL,v 1.10 2006/11/02 01:22:20 ilister Exp $
